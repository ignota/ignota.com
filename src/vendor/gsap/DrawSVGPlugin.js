/*!
 * VERSION: 0.1.6
 * DATE: 2018-05-30
 * UPDATES AND DOCS AT: http://greensock.com
 *
 * @license Copyright (c) 2008-2018, GreenSock. All rights reserved.
 * DrawSVGPlugin is a Club GreenSock membership benefit; You must have a valid membership to use
 * this code without violating the terms of use. Visit http://greensock.com/club/ to sign up or get more details.
 * This work is subject to the software agreement that was issued with your membership.
 * 
 * @author: Jack Doyle, jack@greensock.com
 */
import{_gsScope}from"gsap/TweenLite.js";var DrawSVGPlugin,_doc=_gsScope.document,_getComputedStyle=_doc.defaultView?_doc.defaultView.getComputedStyle:function(){},_numbersExp=/(?:(-|-=|\+=)?\d*\.?\d*(?:e[\-+]?\d+)?)[0-9]/gi,_isEdge=-1!==((_gsScope.navigator||{}).userAgent||"").indexOf("Edge");function getDistance(e,t,s,i,r,a){return s=(parseFloat(s||0)-parseFloat(e||0))*r,i=(parseFloat(i||0)-parseFloat(t||0))*a,Math.sqrt(s*s+i*i)}function unwrap(e){return"string"!=typeof e&&e.nodeType||(e=_gsScope.TweenLite.selector(e)).length&&(e=e[0]),e}function parse(e,t,s){var i,r,a=e.indexOf(" ");return-1===a?(i=void 0!==s?s+"":e,r=e):(i=e.substr(0,a),r=e.substr(a+1)),(i=-1!==i.indexOf("%")?parseFloat(i)/100*t:parseFloat(i))>(r=-1!==r.indexOf("%")?parseFloat(r)/100*t:parseFloat(r))?[r,i]:[i,r]}function getLength(e){if(!e)return 0;var t,s,i,r,a,o,n,h=(e=unwrap(e)).tagName.toLowerCase(),l=1,g=1;"non-scaling-stroke"===e.getAttribute("vector-effect")&&(l=(g=e.getScreenCTM()).a,g=g.d);try{s=e.getBBox()}catch(e){console.log("Error: Some browsers like Firefox won't report measurements of invisible elements (like display:none).")}if(s&&(s.width||s.height)||"rect"!==h&&"circle"!==h&&"ellipse"!==h||(s={width:parseFloat(e.getAttribute("rect"===h?"width":"circle"===h?"r":"rx")),height:parseFloat(e.getAttribute("rect"===h?"height":"circle"===h?"r":"ry"))},"rect"!==h&&(s.width*=2,s.height*=2)),"path"===h)r=e.style.strokeDasharray,e.style.strokeDasharray="none",t=e.getTotalLength()||0,l!==g&&console.log("Warning: <path> length cannot be measured accurately when vector-effect is non-scaling-stroke and the element isn't proportionally scaled."),t*=(l+g)/2,e.style.strokeDasharray=r;else if("rect"===h)t=2*s.width*l+2*s.height*g;else if("line"===h)t=getDistance(s.x,s.y,s.x+s.width,s.y+s.height,l,g);else if("polyline"===h||"polygon"===h)for(i=e.getAttribute("points").match(_numbersExp)||[],"polygon"===h&&i.push(i[0],i[1]),t=0,a=2;a<i.length;a+=2)t+=getDistance(i[a-2],i[a-1],i[a],i[a+1],l,g)||0;else"circle"!==h&&"ellipse"!==h||(o=s.width/2*l,n=s.height/2*g,t=Math.PI*(3*(o+n)-Math.sqrt((3*o+n)*(o+3*n))));return t||0}function getPosition(e,t){if(!e)return[0,0];e=unwrap(e),t=t||getLength(e)+1;var s=_getComputedStyle(e),i=s.strokeDasharray||"",r=parseFloat(s.strokeDashoffset),a=i.indexOf(",");return a<0&&(a=i.indexOf(" ")),(i=a<0?t:parseFloat(i.substr(0,a))||1e-5)>t&&(i=t),[Math.max(0,-r),Math.max(0,i-r)]}(DrawSVGPlugin=_gsScope._gsDefine.plugin({propName:"drawSVG",API:2,version:"0.1.6",global:!0,overwriteProps:["drawSVG"],init:function(e,t,s,i){if(!e.getBBox)return!1;var r,a,o,n,h=getLength(e)+1;return this._style=e.style,"function"==typeof t&&(t=t(i,e)),!0===t||"true"===t?t="0 100%":t?-1===(t+"").indexOf(" ")&&(t="0 "+t):t="0 0",a=parse(t,h,(r=getPosition(e,h))[0]),this._length=h+10,0===r[0]&&0===a[0]?(o=Math.max(1e-5,a[1]-h),this._dash=h+o,this._offset=h-r[1]+o,this._addTween(this,"_offset",this._offset,h-a[1]+o,"drawSVG")):(this._dash=r[1]-r[0]||1e-6,this._offset=-r[0],this._addTween(this,"_dash",this._dash,a[1]-a[0]||1e-5,"drawSVG"),this._addTween(this,"_offset",this._offset,-a[0],"drawSVG")),_isEdge&&(n=_getComputedStyle(e)).strokeLinecap!==n.strokeLinejoin&&(a=parseFloat(n.strokeMiterlimit),this._addTween(e.style,"strokeMiterlimit",a,a+1e-4,"strokeMiterlimit")),!0},set:function(e){this._firstPT&&(this._super.setRatio.call(this,e),this._style.strokeDashoffset=this._offset,this._style.strokeDasharray=1===e||0===e?this._offset<.001&&this._length-this._dash<=10?"none":this._offset===this._dash?"0px, 999999px":this._dash+"px,"+this._length+"px":this._dash+"px,"+this._length+"px")}})).getLength=getLength,DrawSVGPlugin.getPosition=getPosition;export{DrawSVGPlugin,DrawSVGPlugin as default};
